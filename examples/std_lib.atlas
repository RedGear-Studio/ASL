//math
@extern func abs(x: i64) -> i64;
@extern func pow(base: i64, exponent: i64) -> i64;
@extern func sqrt(x: float) -> float
@extern func min(a: i64, b: i64) -> i64;
@extern func max(a: i64, b: i64) -> i64;
@extern func round(x: float) -> i64;
@extern func random(min: i64, max: i64) -> i64;

//file
@extern func read_dir(path: &string) -> &List<string>;
@extern func read_file(path: &string) -> &string;
@extern func write_file(path: &string, contents: &string) -> i64;
@extern func file_exists(path: &string) -> bool;
@extern func remove_file(path: &string) -> i64;

//io
@extern func println<T>(value: T) -> i64;
@extern func print<T>(value: T) -> i64;
@extern func input() -> &string;

//list
@extern func len<T>(list: &List<T>) -> i64;
@extern func push<T>(list: &List<T>, value: T) -> i64;
@extern func pop<T>(list: &List<T>) -> T;
@extern func get<T>(list: &List<T>, index: u64) -> T;
@extern func set<T>(list: &List<T>, index: u64, value: T) -> i64;
@extern func remove<T>(list: &List<T>, index: u64) -> i64;
@extern func slice<T>(list: &List<T>, start: u64, end: u64) -> &List<T>;

//string
@extern func str_len(s: &string) -> i64;
@extern func trim(s: &string) -> &string;
@extern func split(s: &string, delimiter: &string) -> &List<string>;
@extern func to_upper(s: &string) -> &string;
@extern func to_lower(s: &string) -> &string;

//time
@extern func now() -> Time;
@extern func format_time_iso(time: Time) -> &string;
@extern func format_time(time: Time, format: &string) -> &string;
@extern func elapsed(start: Time, end: Time) -> i64;
@extern struct Time {
    seconds: i64,
    nanoseconds: i64
};