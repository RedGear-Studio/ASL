                If {
                    ttype: _,
                    test,
                    body,
                    alternative,
                } => {
                    let (bodyjump, alterjump) = (self.gen.generate(), self.gen.generate());
                    self.compile_expr(test)?;
                    self.asm.push(Asm::JUMPIFFALSE(bodyjump));
                    let body_ast = Ast {
                        program: body.clone(),
                    };
                    self.compile_program(
                        body_ast,
                        self.filepath.clone(),
                        false,
                        false,
                        false,
                        false,
                    )?;
                    self.asm.pop();

                    if let Some(alternative) = alternative {
                        self.asm.push(Asm::JMP(alterjump));
                        self.asm.push(Asm::LABEL(bodyjump));
                        let alt = Ast {
                            program: alternative.clone(),
                        };
                        self.compile_program(
                            alt,
                            self.filepath.clone(),
                            false,
                            false,
                            false,
                            false,
                        )?;
                        self.asm.pop();
                        self.asm.push(Asm::LABEL(alterjump));
                    } else {
                        self.asm.push(Asm::LABEL(bodyjump));
                    }
                }